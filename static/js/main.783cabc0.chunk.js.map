{"version":3,"sources":["App.jsx","SimpleMap/index.jsx","MapWithMarker/index.jsx","MapWithMovingMarker/index.jsx","MarkerWithPopup/index.jsx","CustomMarkerOnOver/index.jsx","MapWithCircle/index.jsx","MapWithNavigationControlsPosition/index.jsx","AllInOne/index.jsx","index.js"],"names":["global","ACCESS_TOKEN","App","props","_this","Object","_Users_pierrick_Documents_01_Work_00_MeilleursAgents_01_MeilleursAgents_react_mapbox_wrapper_examples_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_pierrick_Documents_01_Work_00_MeilleursAgents_01_MeilleursAgents_react_mapbox_wrapper_examples_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_pierrick_Documents_01_Work_00_MeilleursAgents_01_MeilleursAgents_react_mapbox_wrapper_examples_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","coordinates","lat","lng","_this2","Places","container","document","querySelector","on","e","setState","suggestion","latlng","Diagnose","fullDiagnostic","then","content","console","debug","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","href","target","rel","style","position","top","right","border","src","alt","type","id","placeholder","_SimpleMap__WEBPACK_IMPORTED_MODULE_10__","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_6__","language","prism","_MapWithMarker__WEBPACK_IMPORTED_MODULE_11__","_MapWithMovingMarker__WEBPACK_IMPORTED_MODULE_12__","_MarkerWithPopup__WEBPACK_IMPORTED_MODULE_13__","_CustomMarkerOnOver__WEBPACK_IMPORTED_MODULE_14__","_MapWithCircle__WEBPACK_IMPORTED_MODULE_15__","_MapWithNavigationControlsPosition__WEBPACK_IMPORTED_MODULE_16__","_AllInOne__WEBPACK_IMPORTED_MODULE_17__","role","aria-label","Component","__webpack_require__","d","__webpack_exports__","SimpleMap","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_mapbox_wrapper__WEBPACK_IMPORTED_MODULE_1__","react_mapbox_wrapper__WEBPACK_IMPORTED_MODULE_1___default","_ref","height","width","accessToken","displayName","MapWithMarker","onMapLoad","bind","_Users_pierrick_Documents_01_Work_00_MeilleursAgents_01_MeilleursAgents_react_mapbox_wrapper_examples_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","map","forceUpdate","marker","react__WEBPACK_IMPORTED_MODULE_6___default","react_mapbox_wrapper__WEBPACK_IMPORTED_MODULE_7__","react_mapbox_wrapper__WEBPACK_IMPORTED_MODULE_7___default","onLoad","MapWithMovingMarker","setInterval","_this2$props$coordina","Math","random","MarkerWithPopup","popup","popupAnchor","popupOffset","CustomMarker","popupOnOver","fontSize","MapWithCircle","circle","key","radius","unit","paint","fill-color","fill-opacity","MapWithNavigationControlsPosition","fullscreenControlPosition","navigationControlPosition","withCompass","withZoom","withFullscreen","SENTIER_COORDINATES","RADIUS_COORDINATES","AllInOne","bounds","Helpers","newBounds","extend","newBound","jumpTo","cameraForBounds","padding","markers","popupHaussmann","popupSentier","r","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.783cabc0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { Diagnose } from 'react-mapbox-wrapper';\nimport Places from 'places.js';\nimport SimpleMap from './SimpleMap';\nimport MapWithMarker from './MapWithMarker';\nimport MapWithMovingMarker from './MapWithMovingMarker';\nimport MarkerWithPopup from './MarkerWithPopup';\nimport CustomMarkerOnOver from './CustomMarkerOnOver';\nimport MapWithCircle from './MapWithCircle';\nimport MapWithNavigationControlsPosition from './MapWithNavigationControlsPosition';\nimport AllInOne from './AllInOne';\nimport './App.css';\n\n/**\n * Public access token retrieved from https://github.com/mapbox/mapbox-gl-supported/blob/gh-pages/diagnostics.html.\n * @type {String}\n */\nglobal.ACCESS_TOKEN =\n    'pk.eyJ1IjoibHVjYXN3b2oiLCJhIjoiY2l5Nmg4cWU1MDA0ejMzcDJtNHJmZzJkcyJ9.WhcEdTYQH6sSw2pm0RSP9Q';\n\n/**\n * App Component.\n */\nexport default class App extends Component {\n    /**\n     * Creates an instance of App.\n     * @param {Object} props Component props\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            coordinates: {\n                lat: 48.872198,\n                lng: 2.3366308,\n            },\n        };\n    }\n\n    /**\n     * React lifecycle.\n     */\n    componentDidMount() {\n        const placesAutocomplete = Places({\n            container: document.querySelector('#address-input'),\n        });\n\n        placesAutocomplete.on('change', e => this.setState({ coordinates: e.suggestion.latlng }));\n\n        Diagnose.fullDiagnostic().then((content) => {\n          global.console.debug(content);\n        });\n    }\n\n    /**\n     * React lifecycle.\n     */\n    render() {\n        const { coordinates } = this.state;\n\n        return (\n            <div>\n                <header className=\"header\">\n                    <h1>react-mapbox-wrapper</h1>\n                    <a\n                        href=\"https://github.com/MeilleursAgents/react-mapbox-wrapper\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                    >\n                        <img\n                            style={{ position: 'absolute', top: 0, right: 0, border: 0 }}\n                            src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\"\n                            alt=\"Fork me on GitHub\"\n                        />\n                    </a>\n                </header>\n\n                <br />\n\n                <a\n                    className=\"link\"\n                    href=\"https://github.com/MeilleursAgents/react-mapbox-wrapper#usage\"\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                >\n                    Documentation\n                </a>\n                <a\n                    className=\"link margin-left\"\n                    href=\"https://github.com/MeilleursAgents/react-mapbox-wrapper/tree/master/examples/src\"\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                >\n                    Examples sources\n                </a>\n\n                <div className=\"ap-input-wrapper\">\n                    <input type=\"search\" id=\"address-input\" placeholder=\"Search a place\" />\n                    <span className=\"disclaimer\">\n                        We use algolia's default api key, places may have imprecise coordinates\n                    </span>\n                </div>\n\n                <div className=\"content\">\n                    <h2>SimpleMap with fixed size</h2>\n                    <div className=\"example\">\n                        <SimpleMap className=\"map-container\" coordinates={coordinates} />\n                        <SyntaxHighlighter className=\"code\" language=\"jsx\" style={prism}>\n                            {`import React from 'react';\nimport MapboxMap from 'react-mapbox-wrapper';\n\nexport default function SimpleMap({coordinates}) {\n  return (\n    <div style={{ height: 400, width: 400 }}>\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n      />\n    </div>\n  );\n}\n\nSimpleMap.displayName = 'SimpleMap';`}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n\n                <div className=\"content\">\n                    <h2>Marker</h2>\n                    <div className=\"example\">\n                        <MapWithMarker coordinates={coordinates} />\n                        <SyntaxHighlighter className=\"code\" language=\"jsx\" style={prism}>\n                            {`import React, { Component } from 'react';\nimport MapboxMap, { Marker } from 'react-mapbox-wrapper';\n\nexport default class MapWithMarker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let marker;\n    const { coordinates } = this.props;\n\n    if (this.map) {\n      marker = <Marker coordinates={coordinates} map={this.map} />;\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {marker}\n      </MapboxMap>\n    );\n  }\n}\n\nMapWithMarker.displayName = 'MapWithMarker';`}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n\n                <div className=\"content\">\n                    <h2>Moving Marker with array-style LngLat</h2>\n                    <div className=\"example\">\n                        <MapWithMovingMarker coordinates={coordinates} />\n                        <SyntaxHighlighter className=\"code\" language=\"jsx\" style={prism}>\n                            {`import React, { Component } from 'react';\nimport MapboxMap, { Marker } from 'react-mapbox-wrapper';\n\nexport default class MapWithMovingMarker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      coordinates: props.coordinates,\n    };\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const { lat, lng } = this.props.coordinates;\n\n      this.setState({\n        coordinates: [lng + 0.001 * Math.random(), lat + 0.001 * Math.random()],\n      });\n    }, 1000);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let marker;\n    const { coordinates } = this.props;\n\n    if (this.map) {\n      marker = <Marker coordinates={this.state.coordinates} map={this.map} />;\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {marker}\n      </MapboxMap>\n    );\n  }\n}\n\nMapWithMovingMarker.displayName = 'MapWithMovingMarker';`}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n\n                <div className=\"content\">\n                    <h2>Marker with Popup on Click</h2>\n                    <div className=\"example\">\n                        <MarkerWithPopup coordinates={coordinates} />\n                        <SyntaxHighlighter className=\"code\" language=\"jsx\" style={prism}>\n                            {`import React, { Component } from 'react';\nimport MapboxMap, { Marker } from 'react-mapbox-wrapper';\n\nexport default class MarkerWithPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let marker;\n    const { coordinates } = this.props;\n\n    if (this.map) {\n      const popup = <div>Meaningful content on my Marker</div>;\n\n      marker = (\n        <Marker\n          coordinates={coordinates}\n          map={this.map}\n          popup={popup}\n          popupAnchor='bottom'\n          popupOffset={30}\n        />\n      );\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {marker}\n      </MapboxMap>\n    );\n  }\n}\n\nMarkerWithPopup.displayName = 'MarkerWithPopup';`}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n\n                <div className=\"content\">\n                    <h2>Custom Marker with Popup on Over</h2>\n                    <div className=\"example\">\n                        <CustomMarkerOnOver coordinates={coordinates} />\n                        <SyntaxHighlighter className=\"code\" language=\"jsx\" style={prism}>\n                            {`import React, { Component } from 'react';\nimport MapboxMap, { Marker } from 'react-mapbox-wrapper';\n\nexport default class CustomMarker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let marker;\n    const { coordinates } = this.props;\n\n    if (this.map) {\n      const popup = <div>http://localhost</div>;\n\n      marker = (\n        <Marker\n          coordinates={coordinates}\n          map={this.map}\n          popup={popup}\n          popupAnchor='bottom'\n          popupOnOver\n          popupOffset={20}\n        >\n          <span role=\"img\" aria-label=\"Emoji Marker\" style={{ fontSize: '30px' }}>\n            🏢\n          </span>\n        </Marker>\n      );\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {marker}\n      </MapboxMap>\n    );\n  }\n}\n\nCustomMarker.displayName = 'CustomMarker';`}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n\n                <div className=\"content\">\n                    <h2>Circle</h2>\n                    <div className=\"example\">\n                        <MapWithCircle coordinates={coordinates} />\n                        <SyntaxHighlighter className=\"code\" language=\"jsx\" style={prism}>\n                            {`import React, { Component } from 'react';\nimport MapboxMap, { Circle } from 'react-mapbox-wrapper';\n\nexport default class MapWithCircle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let circle;\n    const { coordinates } = this.props;\n\n    if(this.map) {\n        circle = <Circle\n        key=\"radius\"\n        id=\"radius\"\n        coordinates={{lat: 40.7590403, lng: -74.0392709}}\n        map={this.map}\n        radius={330}\n        unit=\"feet\"\n        paint={{\n          'fill-color': '#0074e4',\n          'fill-opacity': 0.33,\n        }}\n      />\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={{lat: 40.7590403, lng: -74.0392709}}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {circle}\n      </MapboxMap>\n    );\n  }\n}\n\nMapWithCircle.displayName = 'MapWithCircle';`}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n\n                <div className=\"content\">\n                    <h2>Map navigation controls with custom position</h2>\n                    <div className=\"example\">\n                        <MapWithNavigationControlsPosition coordinates={coordinates} />\n                        <SyntaxHighlighter className=\"code\" language=\"jsx\" style={prism}>\n                            {`import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapboxMap from 'react-mapbox-wrapper';\n\n/**\n * MapControlPosition Functional Component.\n */\nexport default function MapWithNavigationControlsPosition({coordinates}) {\n    return (\n        <MapboxMap\n          accessToken={global.ACCESS_TOKEN}\n          coordinates={coordinates}\n          className=\"map-container\"\n          fullscreenControlPosition=\"top-left\"\n          navigationControlPosition=\"top-right\"\n          withCompass\n          withZoom\n          withFullscreen\n        />\n    );\n};\n\nMapWithNavigationControlsPosition.displayName = 'MapWithNavigationControlsPosition';`}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n\n                <div className=\"content\">\n                    <h2>Radius, Marker, Popup and fitBounds</h2>\n                    <div className=\"example\">\n                        <AllInOne coordinates={coordinates} />\n                        <SyntaxHighlighter className=\"code\" language=\"jsx\" style={prism}>\n                            {`import React, { Component } from 'react';\nimport MapboxMap, { Marker, Circle, Helpers } from 'react-mapbox-wrapper';\n\nconst SENTIER_COORDINATES = { lat: 48.868526, lng: 2.3434886 };\nconst RADIUS_COORDINATES = { lat: 48.870362, lng: 2.3400597 };\n\nexport default class AllInOne extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map, coordinates) {\n    this.map = map;\n    this.forceUpdate();\n\n    const bounds = Helpers.newBounds();\n    bounds.extend(Helpers.newBound({lat: 48.872198, lng: 2.3366308}));\n    bounds.extend(Helpers.newBound(SENTIER_COORDINATES));\n\n    this.map.jumpTo(this.map.cameraForBounds(bounds, { padding: 120 }));\n  }\n\n  render() {\n    let markers;\n    if (this.map) {\n      const popupHaussmann = <div>Happy to be here</div>;\n      const popupSentier = <div>Old home</div>;\n\n      markers = [\n        <Marker\n          key=\"haussmann\"\n          coordinates={{lat: 48.872198, lng: 2.3366308}}\n          map={this.map}\n          popup={popupHaussmann}\n          popupAnchor='top-left'\n          popupOnOver\n          popupOffset={20}\n        >\n          <span role=\"img\" aria-label=\"Emoji Marker\" style={{ fontSize: '30px' }}>\n            🏢\n          </span>\n        </Marker>,\n        <Marker\n          key=\"sentier\"\n          coordinates={SENTIER_COORDINATES}\n          map={this.map}\n          popup={popupSentier}\n          popupAnchor='bottom-right'\n          popupOnOver\n          popupOffset={20}\n        >\n          <span role=\"img\" aria-label=\"Emoji Marker\" style={{ fontSize: '30px' }}>\n            🏠\n          </span>\n        </Marker>,\n        <Circle\n          key=\"radius\"\n          id=\"radius\"\n          coordinates={RADIUS_COORDINATES}\n          map={this.map}\n          radius={500}\n          unit=\"meters\"\n          paint={{\n            'fill-color': '#0074e4',\n            'fill-opacity': 0.33,\n          }}\n        />,\n      ];\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={{lat: 48.872198, lng: 2.3366308}}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n        withCompass\n        withZoom\n        withFullscreen\n      >\n        {markers}\n      </MapboxMap>\n    );\n  }\n}\n\nAllInOne.displayName = 'AllInOne';`}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n\n                <footer className=\"footer\">\n                    Made with{' '}\n                    <span role=\"img\" aria-label=\"love\">\n                        ❤️\n                    </span>{' '}\n                    by{' '}\n                    <a\n                        href=\"https://www.meilleursagents.com\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                    >\n                        MeilleursAgents\n                    </a>\n                </footer>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapboxMap from 'react-mapbox-wrapper';\n\n/**\n * SimpleMap Functional Component.\n */\nexport default function SimpleMap({coordinates}) {\n  return (\n    <div style={{ height: 400, width: 400 }}>\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n      />\n    </div>\n  );\n};\n\nSimpleMap.displayName = 'SimpleMap';\n\nSimpleMap.propTypes = {\n\tcoordinates: PropTypes.object.isRequired\n};\n\n","import React, { Component } from 'react';\nimport MapboxMap, { Marker } from 'react-mapbox-wrapper';\n\nexport default class MapWithMarker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let marker;\n    const { coordinates } = this.props;\n\n    if (this.map) {\n      marker = <Marker coordinates={coordinates} map={this.map} />;\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {marker}\n      </MapboxMap>\n    );\n  }\n}\n\nMapWithMarker.displayName = 'MapWithMarker';\n","import React, { Component } from 'react';\nimport MapboxMap, { Marker } from 'react-mapbox-wrapper';\n\nexport default class MapWithMovingMarker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      coordinates: props.coordinates,\n    };\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  /**\n   * React lifecycle.\n   */\n  componentDidMount() {\n    setInterval(() => {\n      const { lat, lng } = this.props.coordinates;\n\n      this.setState({\n        coordinates: [lng + 0.001 * Math.random(), lat + 0.001 * Math.random()],\n      });\n    }, 1000);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let marker;\n    const { coordinates } = this.props;\n\n    if (this.map) {\n      marker = <Marker coordinates={this.state.coordinates} map={this.map} />;\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {marker}\n      </MapboxMap>\n    );\n  }\n}\n\nMapWithMovingMarker.displayName = 'MapWithMovingMarker';\n","import React, { Component } from 'react';\nimport MapboxMap, { Marker } from 'react-mapbox-wrapper';\n\nexport default class MarkerWithPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let marker;\n    const { coordinates } = this.props;\n\n    if (this.map) {\n      const popup = <div>Meaningful content on my Marker</div>;\n\n      marker = (\n        <Marker\n          coordinates={coordinates}\n          map={this.map}\n          popup={popup}\n          popupAnchor='bottom'\n          popupOffset={30}\n        />\n      );\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {marker}\n      </MapboxMap>\n    );\n  }\n}\n\nMarkerWithPopup.displayName = 'MarkerWithPopup';\n","import React, { Component } from 'react';\nimport MapboxMap, { Marker } from 'react-mapbox-wrapper';\n\nexport default class CustomMarker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let marker;\n    const { coordinates } = this.props;\n\n    if (this.map) {\n      const popup = <div>http://localhost</div>;\n\n      marker = (\n        <Marker\n          coordinates={coordinates}\n          map={this.map}\n          popup={popup}\n          popupAnchor='bottom'\n          popupOnOver\n          popupOffset={20}\n        >\n          <span role=\"img\" aria-label=\"Emoji Marker\" style={{ fontSize: '30px' }}>\n            🏢\n          </span>\n        </Marker>\n      );\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {marker}\n      </MapboxMap>\n    );\n  }\n}\n\nCustomMarker.displayName = 'CustomMarker';\n","import React, { Component } from 'react';\nimport MapboxMap, { Circle } from 'react-mapbox-wrapper';\n\nexport default class MapWithCircle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map) {\n    this.map = map;\n    this.forceUpdate();\n  }\n\n  render() {\n    let circle;\n    const { coordinates } = this.props;\n\n    if(this.map) {\n        circle = <Circle\n        key=\"radius\"\n        id=\"radius\"\n        coordinates={coordinates}\n        map={this.map}\n        radius={330}\n        unit=\"feet\"\n        paint={{\n          'fill-color': '#0074e4',\n          'fill-opacity': 0.33,\n        }}\n      />\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={coordinates}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n      >\n        {circle}\n      </MapboxMap>\n    );\n  }\n}\n\nMapWithCircle.displayName = 'MapWithCircle';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapboxMap from 'react-mapbox-wrapper';\n\n/**\n * MapControlPosition Functional Component.\n */\nexport default function MapWithNavigationControlsPosition({coordinates}) {\n    return (\n        <MapboxMap\n          accessToken={global.ACCESS_TOKEN}\n          coordinates={coordinates}\n          className=\"map-container\"\n          fullscreenControlPosition=\"top-left\"\n          navigationControlPosition=\"top-right\"\n          withCompass\n          withZoom\n          withFullscreen\n        />\n    );\n};\n\nMapWithNavigationControlsPosition.displayName = 'MapWithNavigationControlsPosition';\n","import React, { Component } from 'react';\nimport MapboxMap, { Marker, Circle, Helpers } from 'react-mapbox-wrapper';\n\nconst SENTIER_COORDINATES = { lat: 48.868526, lng: 2.3434886 };\nconst RADIUS_COORDINATES = { lat: 48.870362, lng: 2.3400597 };\n\nexport default class AllInOne extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapLoad = this.onMapLoad.bind(this);\n  }\n\n  onMapLoad(map, coordinates) {\n    this.map = map;\n    this.forceUpdate();\n\n    const bounds = Helpers.newBounds();\n    bounds.extend(Helpers.newBound({lat: 48.872198, lng: 2.3366308}));\n    bounds.extend(Helpers.newBound(SENTIER_COORDINATES));\n\n    this.map.jumpTo(this.map.cameraForBounds(bounds, { padding: 120 }));\n  }\n\n  render() {\n    let markers;\n    if (this.map) {\n      const popupHaussmann = <div>Happy to be here</div>;\n      const popupSentier = <div>Old home</div>;\n\n      markers = [\n        <Marker\n          key=\"haussmann\"\n          coordinates={{lat: 48.872198, lng: 2.3366308}}\n          map={this.map}\n          popup={popupHaussmann}\n          popupAnchor='top-left'\n          popupOnOver\n          popupOffset={20}\n        >\n          <span role=\"img\" aria-label=\"Emoji Marker\" style={{ fontSize: '30px' }}>\n            🏢\n          </span>\n        </Marker>,\n        <Marker\n          key=\"sentier\"\n          coordinates={SENTIER_COORDINATES}\n          map={this.map}\n          popup={popupSentier}\n          popupAnchor='bottom-right'\n          popupOnOver\n          popupOffset={20}\n        >\n          <span role=\"img\" aria-label=\"Emoji Marker\" style={{ fontSize: '30px' }}>\n            🏠\n          </span>\n        </Marker>,\n        <Circle\n          key=\"radius\"\n          id=\"radius\"\n          coordinates={RADIUS_COORDINATES}\n          map={this.map}\n          radius={500}\n          unit=\"meters\"\n          paint={{\n            'fill-color': '#0074e4',\n            'fill-opacity': 0.33,\n          }}\n        />,\n      ];\n    }\n\n    return (\n      <MapboxMap\n        accessToken={global.ACCESS_TOKEN}\n        coordinates={{lat: 48.872198, lng: 2.3366308}}\n        className=\"map-container\"\n        onLoad={this.onMapLoad}\n        withCompass\n        withZoom\n        withFullscreen\n      >\n        {markers}\n      </MapboxMap>\n    );\n  }\n}\n\nAllInOne.displayName = 'AllInOne';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}